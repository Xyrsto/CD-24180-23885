
import classesEleicao.Candidato;
import classesEleicao.Elector;
import classesEleicao.Eleicao;
import classesEleicao.ImageUtils;
import classesEleicao.MerkelTree;
import java.awt.Color;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JRadioButton;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 * Janela de voto
 * @author serra
 */
public class WindowVotar extends javax.swing.JFrame {

    public Eleicao myElection;
    public ArrayList<Candidato> candidatosLista;
    DefaultListModel modelCandidatos = new DefaultListModel();
    int voto = -1;
    int eleitor = -1;
    boolean isAutenticated = false;

    public WindowVotar() {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        // Abre a janela inicial no centro do ecr達
        setLocationRelativeTo(null);
    }

    public WindowVotar(Eleicao eleicao) {
        myElection = eleicao;

        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setForeground(Color.red);
        
        // Abre a janela inicial no centro do ecr達
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        candidatosList = new javax.swing.JList<>();
        ccTextInput = new javax.swing.JTextField();
        ccLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        passwordInput = new javax.swing.JPasswordField();
        candidatosLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Autenticar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        merkelTreeText = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Janela de voto");
        setResizable(false);

        jButton2.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jButton2.setText("Votar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botVotar(evt);
            }
        });

        candidatosList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                candidatosListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(candidatosList);

        ccTextInput.setToolTipText("");
        ccTextInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ccTextInputKeyTyped(evt);
            }
        });

        ccLabel.setText("Cart達o de Cidad達o do Eleitor:");

        passwordLabel.setText("Password do Eleitor");

        candidatosLabel.setText("Lista de Candidatos");

        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText(" ");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel2.setText("VOTAR");

        Autenticar.setText("Autenticar");
        Autenticar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AutenticarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel4.setText("     ");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel5.setText("    ");
        jLabel5.setToolTipText("");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel7.setText("     ");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel8.setText("     ");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        merkelTreeText.setColumns(20);
        merkelTreeText.setRows(5);
        jScrollPane3.setViewportView(merkelTreeText);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(candidatosLabel)
                                .addComponent(passwordLabel)
                                .addComponent(passwordInput, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                                .addComponent(ccTextInput))
                            .addComponent(ccLabel)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Autenticar))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addGap(62, 62, 62)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(53, 53, 53))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ccLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ccTextInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(passwordLabel)
                        .addGap(1, 1, 1)
                        .addComponent(passwordInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(Autenticar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(candidatosLabel)
                    .addComponent(jLabel1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botVotar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botVotar
        if(!isAutenticated){
            jLabel1.setForeground(Color.red);
            jLabel1.setText("Eleitor n達o autenticado.");
            return;
        }
        

        // Confirma que foi selecionado um cart達o de cidad達o e password v叩lidos
        confirmarCC();
        if (eleitor == -1) {
            return;
        }
        if (candidatosList.getSelectedIndex() == -1) {
            jLabel1.setForeground(Color.red);
            jLabel1.setText("Selecione um candidato.");
            return;
        }

        //Se o eleitor estiver v叩lido para votar, adiciona o voto ao seu objeto, sen達o mostra um erro na label
        if (myElection.eleitores.get(eleitor).isValid()) {
            myElection.candidatos.get(candidatosList.getSelectedIndex()).addVoto();
            myElection.eleitores.get(eleitor).setVoto(myElection.candidatos.get(candidatosList.getSelectedIndex()).getNome());
            String[] elements = new String[2];
            elements[0] = myElection.eleitores.get(eleitor).getNome();
            elements[1] = myElection.candidatos.get(candidatosList.getSelectedIndex()).getNome();
            MerkelTree mt = new MerkelTree(elements);
            merkelTreeText.setText(mt.toString());
            myElection.add(mt.getRoot(), 5);
            jTextArea1.setText(myElection.chainToString());
        } else {
            jLabel1.setForeground(Color.red);
            jLabel1.setText("Este eleitor n達o 辿 v叩lido para vota巽達o.");
            return;
        }

        // Confirma巽達o de voto atr叩ves de um label
        jLabel1.setForeground(new Color(0, 153, 0));
        jLabel1.setText("Voto adicionado com sucesso.");

        System.out.println(myElection);
        clearInputs2();
    }//GEN-LAST:event_botVotar

    public void clearInputs2()
    {
        ccTextInput.setText("");
        passwordInput.setText("");
        jLabel4.setText("");
        jLabel5.setText("");
        jLabel3.setIcon(null);
        jLabel6.setIcon(null);
        jLabel7.setText("");
        jLabel8.setText("");
    }
    
    
    
    private void AutenticarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AutenticarActionPerformed
        // TODO add your handling code here:
        ImageIcon img = new ImageIcon(WindowVotar.class.getResource("Imagens/aleat.jpg"));
        img = ImageUtils.resizeIcon(img, Elector.DEFAULT_IMAGE_SIZE, Elector.DEFAULT_IMAGE_SIZE);
        for (int i = 0; i < myElection.eleitores.size(); i++) {
            if (myElection.eleitores.get(i).getCartaoCidadao().equals(ccTextInput.getText())) {
                if (myElection.eleitores.get(i).getPassword().equals(passwordInput.getText())) {
                    jLabel7.setText(myElection.eleitores.get(i).getNome());
                    
                    jLabel4.setText("Foto do Eleitor");
                    jLabel3.setIcon(myElection.eleitores.get(i).getFoto());
                    
                    if(myElection.eleitores.get(i).getFoto() == null)
                    {
                        jLabel3.setIcon(img);
                    }
                    
                    jLabel1.setForeground(new Color(0, 153, 0));
                    jLabel1.setText("Eleitor autenticado.");
                    
                    isAutenticated = true;
                    
                    return;
                }
                jLabel1.setForeground(Color.red);
                jLabel1.setText("Password errada. Tente novamente.");
                return;
            }
                jLabel1.setForeground(Color.red);
                jLabel1.setText("CC n達o encontrado.");
        }
    }//GEN-LAST:event_AutenticarActionPerformed

    private void candidatosListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_candidatosListValueChanged
        mostrarCandidato();
    }//GEN-LAST:event_candidatosListValueChanged

    private void ccTextInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ccTextInputKeyTyped
        // TODO add your handling code here:
        // Retira a autentica巽達o sempre que a caixa de texto do CC 辿 alterada
        isAutenticated = false;
        jLabel1.setForeground(Color.red);
        jLabel1.setText("Insira os seus dados e autentique.");
        jLabel3.setIcon(null);
        jLabel4.setText("");
        jLabel7.setText("");
    }//GEN-LAST:event_ccTextInputKeyTyped

    private void confirmarCC() {
        // Retorna o index do eleitor a partir do Cart達o de Cidad達o inserido. 
        for (int i = 0; i < myElection.eleitores.size(); i++) {
            if (myElection.eleitores.get(i).getCartaoCidadao().equals(ccTextInput.getText())) {
                if (myElection.eleitores.get(i).getPassword().equals(passwordInput.getText())) {
                    eleitor = i;
                    return;
                }
                jLabel1.setForeground(Color.red);
                jLabel1.setText("Password errada. Tente novamente.");
                return;
            }
        }
        jLabel1.setForeground(Color.red);
        jLabel1.setText("Cart達o de cidad達o n達o encontrado.");

    }

    public void escreverCandidatos() {
        for (int i = 0; i < candidatosLista.size(); i++) {
            modelCandidatos.addElement(myElection.candidatos.get(i).getNome());
        }
        candidatosList.setModel(modelCandidatos);
    }

    public void show(Eleicao el) {
        
        //limpa as caixas de input
        clearInputs();
        
        this.myElection = el;

        candidatosLista = myElection.candidatos;

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        
        //mostra os candidatos na JList
        escreverCandidatos();

        setVisible(true);
    }

    public void clearInputs()
    {
        //limpar a JList dos candidatos quando mostra o JForm 
        modelCandidatos.removeAllElements();
        candidatosList.setSelectedIndex(-1);
        ccTextInput.setText("");
        passwordInput.setText("");
        jLabel1.setText("");
        jLabel4.setText("");
        jLabel5.setText("");
        jLabel3.setIcon(null);
        jLabel6.setIcon(null);
        jLabel7.setText("");
        jLabel8.setText("");
    }

    public void mostrarCandidato()
    {
        if(candidatosList.getSelectedValue() != null)
        {
            jLabel5.setText("Foto do candidato");
            jLabel8.setText(myElection.candidatos.get(candidatosList.getSelectedIndex()).getNome());
            jLabel6.setIcon(myElection.candidatos.get(candidatosList.getSelectedIndex()).getFoto());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WindowVotar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WindowVotar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WindowVotar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WindowVotar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WindowVotar().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Autenticar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel candidatosLabel;
    private javax.swing.JList<String> candidatosList;
    private javax.swing.JLabel ccLabel;
    private javax.swing.JTextField ccTextInput;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea merkelTreeText;
    private javax.swing.JPasswordField passwordInput;
    private javax.swing.JLabel passwordLabel;
    // End of variables declaration//GEN-END:variables
}
