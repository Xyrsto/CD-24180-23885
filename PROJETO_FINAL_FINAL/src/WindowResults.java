
import classesEleicao.Candidato;
import classesEleicao.ElectionException;
import classesEleicao.Eleicao;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.logging.Level;
import java.util.logging.Logger;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 * Janela de resultados
 * @author serra
 */
public class WindowResults extends javax.swing.JFrame {


    public Eleicao myElection;


    public ArrayList<Candidato> candidatosResults;
    boolean votosDesc = false;
    boolean nomesDesc = false;

    public WindowResults() {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        for(int i = 0; i<myElection.candidatos.size();i++)
        {
            Resultados.append("Lista " + myElection.candidatos.get(i).getNome() + " : " + myElection.candidatos.get(i).getVotos() + " votos. \n");
        }
        // Abre a janela inicial no centro do ecrã
        setLocationRelativeTo(null);
    }
    

    public WindowResults(Eleicao eleicao) 
    {
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        this.myElection = eleicao;
        initComponents();
        // Abre a janela inicial no centro do ecrã
        setLocationRelativeTo(null);
        
    }

    public void show(Eleicao el)
    {        
        this.myElection = el;
        candidatosResults = myElection.candidatos;
        
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        
        escreverResultados();

        setVisible(true);
    }
    

    public void escreverResultados()
    {
        Resultados.setText("");
        for(int i = 0; i<candidatosResults.size();i++)
        {
            Resultados.append(candidatosResults.get(i).getNome() + " : " + candidatosResults.get(i).getVotos() + " votos. \n");
        }
    }
    

    public void ordenarCandidatos(String tipoOrdenacao)
    {        
        switch(tipoOrdenacao)
        {
            // Ordenação por votos
            case "votos":
                Collections.sort(candidatosResults, new Comparator<Candidato>(){
                @Override public int compare(Candidato p1, Candidato p2)
                    {
                        // Verifica a orientação por votos e na segunda execução inverte a orientação
                        if(!votosDesc){
                            return p2.getVotos() - p1.getVotos();
                        }
                        else
                        {
                            return p1.getVotos() - p2.getVotos();
                        }
                    }
                });
               break;
               
            // Ordenação por nomes
            case "nomes":
                Collections.sort(candidatosResults, new Comparator<Candidato>(){
                @Override public int compare(Candidato p1, Candidato p2)
                    {
                        // Verifica a orientação por votos e na segunda execução inverte a orientação
                        if(!nomesDesc){
                            return p1.getNome().compareTo(p2.getNome());
                        }
                        else
                        {
                            return p2.getNome().compareTo(p1.getNome());
                        }
                    }
                });
                break;
                
        }
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        Resultados = new javax.swing.JTextArea();
        ordenaVotosBot = new javax.swing.JButton();
        ordenaNomesBot = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Janela de resultados");
        setResizable(false);

        Resultados.setBackground(new java.awt.Color(255, 255, 255));
        Resultados.setColumns(20);
        Resultados.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        Resultados.setRows(5);
        Resultados.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        Resultados.setEnabled(false);
        jScrollPane2.setViewportView(Resultados);

        ordenaVotosBot.setText("Ordenar votos");
        ordenaVotosBot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordenaVotosBotActionPerformed(evt);
            }
        });

        ordenaNomesBot.setText("Ordenar nomes");
        ordenaNomesBot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordenaNomesBotActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ordenaNomesBot)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ordenaVotosBot)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ordenaVotosBot, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(ordenaNomesBot, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ordenaVotosBotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenaVotosBotActionPerformed

        // TODO add your handling code here:
        ordenarCandidatos("votos");
          
        // Inverte a ordem de ordenação do botão atual e volta a colocar as outras opções a default(false)
        votosDesc = !votosDesc;
        nomesDesc = false;
        escreverResultados();
    }//GEN-LAST:event_ordenaVotosBotActionPerformed

    private void ordenaNomesBotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenaNomesBotActionPerformed
        ordenarCandidatos("nomes");
        
        // Inverte a ordem de ordenação do botão atual e volta a colocar as outras opções a default(false)
        nomesDesc = !nomesDesc;
        votosDesc = false;
        escreverResultados();
    }//GEN-LAST:event_ordenaNomesBotActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WindowResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WindowResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WindowResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WindowResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WindowResults().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Resultados;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton ordenaNomesBot;
    private javax.swing.JButton ordenaVotosBot;
    // End of variables declaration//GEN-END:variables
}
